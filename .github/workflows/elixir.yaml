name: Build and Deploy to Docker Hub

on:
  workflow_call:
      inputs:
        apt_packages:
          description: "Extra apt packages to install"
          required: false
          type: string
          default: ""
        test_data:
          description: "Test data to install"
          required: false
          type: string
          default: ""

jobs:
  test:
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner != 'brianmay' || github.event_name != 'pull_request' }}

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        ports: ["5432:5432"]
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        elixir: [1.12.3]
        otp: [24.0.4]

    env:
      DATABASE_URL_TEST: postgresql://postgres:postgres@localhost/test?sslmode=disable
      MIX_ENV: test
      BUILD_WITHOUT_QUIC: true

    steps:
      - uses: actions/checkout@v2.4.0
      - name: Install system dependancies
        if: ${{ inputs.apt_packages }}
        run: |
          sudo apt-get update --yes
          sudo apt-get install --yes ${{ inputs.apt_packages }}
      - name: Setup elixir
        uses: erlef/setup-elixir@v1.9
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v2.1.6
        id: mix-cache # id to use in retrieve action
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - name: Install Mix Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Build
        run: |
          mix compile
      - name: Install assets
        run: |
          npm install --prefix assets
      - name: Build assets
        run: |
          npm run deploy --prefix assets
      - name: Check Formatting
        run: mix format --check-formatted
      - name: Check Prettier
        run: mix prettier
      - name: Run Credo
        run: mix credo --strict
      - name: Download and extract test data
        if: ${{ inputs.test_data }}
        run: |
          wget ${{ inputs.test_data }} -O test_data.tar
          tar -xvf test_data.tar
      - name: Run Tests
        run: mix test

  dialyzer:
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner != 'brianmay' || github.event_name != 'pull_request' }}

    strategy:
      matrix:
        elixir: [1.12.3]
        otp: [24.0.4]

    env:
      BUILD_WITHOUT_QUIC: true

    steps:
      - uses: actions/checkout@v2.4.0
      - name: Setup elixir
        uses: erlef/setup-elixir@v1.9
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v2.1.6
        id: mix-cache # id to use in retrieve action
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - name: Install Mix Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Retrieve PLT Cache
        uses: actions/cache@v2.1.6
        id: plt-cache
        with:
          path: priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}-3
      - name: Build
        run: |
          mix compile
      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt
      - name: Run dialyzer
        run: mix dialyzer --no-check
